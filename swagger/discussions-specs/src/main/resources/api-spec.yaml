swagger: '2.0'
info:
  version: 1.0.0
  title: Discussions
  description: A new api for discussions
host: 'localhost:8080'
basePath: /api
schemes:
  - http
  - https
paths:
  '/discussions/{id}':
    delete:
      description: del a discussion and all comments
      operationId: delDiscussion
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
      responses:
        '204':
          description: discussion deleted
        '404':
          description: Not found, discussion id doesn't exist
    get:
      description: get comments of discussion
      operationId: getDiscussion
      summary: Get a discussion
      parameters:
        - name: id
          description: id of discussions
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: the discussion object
          schema:
            $ref: '#/definitions/OutputDiscussion'
        '404':
          description: Not found, discussion id doesn't exist
  '/discussions/{id}/comments/{idComment}':
    get:
      description: get a Comment
      operationId: getComment
      summary: Get a comment
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
        - name: idComment
          description: id of comment
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: comment
          schema:
            $ref: '#/definitions/OutputComment'
        '404':
          description: Not found, discussion id or comment id doesn't exist
    delete:
      description: del a comment in a discussion
      operationId: delComment
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
        - name: idComment
          description: id of comment
          in: path
          type: integer
          required: true
      responses:
        '204':
          description: comment deleted
        '404':
          description: Not found, discussion id or comment id doesn't exist
    put:
      description: Modify a comment
      operationId: updateComment
      parameters:
        - name: id
          in: path
          description: id of the discussion
          type: integer
          required: true
        - name: idComment
          description: id of comment
          in: path
          type: integer
          required: true
        - name: comment
          in: body
          description: comment to be updated
          required: true
          schema:
            $ref: '#/definitions/InputComment'
      responses:
        '204':
          description: comment modified
        '404':
          description: Not found, discussion id or comment id doesn't exist

  /discussions:
    post:
      description: create a discussion
      operationId: createDiscussion
      summary: add a new discussion
      parameters:
        - name: comment
          in: body
          required: true
          schema:
            $ref: '#/definitions/InputDiscussion'
      responses:
        '201':
          description: created
          schema:
            type: object
    get:
      description: get the list of all discussions
      operationId: getDiscussions
      produces:
        - application/json
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/OutputDiscussion'

  '/discussions/{id}/comments':
    post:
      description: create a comment
      operationId: createComment
      summary: add a new comment
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
        - name: comment
          in: body
          required: true
          schema:
            $ref: '#/definitions/InputComment'
      responses:
        '201':
          description: created
          schema:
            type: object
        '404':
          description: Not found, discussion id doesn't exist
    get:
      description: get the list of all comments
      operationId: getComments
      summary: get comments of the discussion
      produces:
        - application/json
      parameters:
        - name: id
          description: id of discussions
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/OutputComment'
        '404':
          description: Not found, discussion id doesn't exist
    delete:
      description: del all comments in a discussion
      operationId: delComments
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
      responses:
        '200':
          description: all comments deleted
        '404':
          description: Not found, discussion id doesn't exist

  '/discussions/{id}/comments/{idComment}/votes':
    post:
      description: vote comment
      operationId: voteComment
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
        - name: idComment
          description: id of discussion
          in: path
          type: integer
          required: true
        - name: vote
          in: body
          required: true
          schema:
            $ref: '#/definitions/InputVote'
      responses:
        '201':
          description: created
          schema:
            type: object
        '404':
          description: Not found, discussion id or idComment doesn't exist

  '/discussions/{id}/comments/{idComment}/reports':
    post:
      description: report coment
      operationId: reportComment
      parameters:
        - name: id
          description: id of discussion
          in: path
          type: integer
          required: true
        - name: idComment
          description: id of comment
          in: path
          type: integer
          required: true
        - name: report
          in: body
          required: true
          schema:
            $ref: '#/definitions/InputReport'
      responses:
        '201':
          description: created
          schema:
            type: object
        '404':
          description: Not found, discussion id or idComment doesn't exist

definitions:
  InputComment:
    type: object
    properties:
      comment:
        type: string
      author:
        type: string
      father_url:
        type: string
  OutputComment:
    type: object
    properties:
      links:
        $ref: '#/definitions/OutputLinks'
      comment:
        type: string
      date:
        type: string
        format: date-time
      author:
        type: string
      votes:
        type: array
        items:
          $ref: '#/definitions/OutputVote'
      reports:
        type: array
        items:
          $ref: '#/definitions/OutputReport'
  InputDiscussion:
    type: object
    properties:
      id_article:
        type: integer
      comments:
        type: array
        items:
          $ref: '#/definitions/InputComment'
  OutputDiscussion:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
          related:
            type: string
      comments:
        type: array
        items:
          $ref: '#/definitions/OutputComment'
  InputVote:
    type: object
    properties:
      vote:
        type: boolean
  OutputVote:
    type: object
    properties:
      vote:
        type: boolean
      date:
        type: string
        format: date-time
  InputReport:
    type: object
    properties:
       isReported:
         type: boolean
  OutputReport:
    type: object
    properties:
       isReported:
         type: boolean
       date:
        type: string
        format: date-time

  OutputLinks:
    type: object
    properties:
      self:
        type: string
      related:
        type: string